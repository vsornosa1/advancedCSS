/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
    margin: 0; /* Removes tag element margin */
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px; 
}

.header {
    height: 95vh; /* 95% viewport height */
    background-image: linear-gradient(
        to right bottom,
        rgba(126, 213, 111, 0.8), 
        rgba(40, 180, 131, 0.8)), 
        url(../img/hero.jpg);
    background-size: cover;
    background-position: top; /* When resized smaller, the top stays */
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}



.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo {
    width: 100px;
}



.text-box {
    position: absolute;
    top: 40%; /* Parent element */
    left: 50%;
    transform: translate(-50%, -50%); /* Element itself */
    text-align: center;
}

.heading-primary {
    color: #FFF;
    text-transform: uppercase;

    backface-visibility: hidden; /* Prevents minor top moves after animation */
    margin-bottom: 60px;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-out;

    /* 
    animation-iteration-count: 3; 
    animation-delay: 3s;
    */
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    animation: moveInRight 2s ease-out;
}



@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}
@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}



.btn:link,
.btn:visited { /* Link pseudoclass - State of the btn selector */
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px; /* Top+bot= 15px, sides=40px */
    display: inline-block; /* Needed when giving padding or height/width */
    border-radius: 100px;
    transition: all 0.2s;
    position: relative; /* Reference corner for the ::after */
}

.btn:hover { /* hover pseudoclass - When user hovers mouse over */
    transform: translateY(-3px);
    box-shadow: 0 10px 20px rgba(0,0,0,.2); /* Xshadow, Yshadow, blur, color*/
}

.btn:active { /* link pseudoclass - When user clicks mouse over */
    transform: translateY(-1px);
    box-shadow: 0 5px 10px rgba(0,0,0,.2);
}

.btn-white {
    background-color: #FFF;
    color: #777;
}

.btn::after { /* ::after pseudo element */
    content: ""; /* Necessary */
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;

    /* Needs as a corner reference a relative element,
     we have to define position: relative in the class 
     where we want to position it to (.btn:link) */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1; /* Defines postion as behind the button */
    transition: all .4s;
}

.btn-white::after {
    background-color: #FFF;
}

/* When we hover the btn,
 we want some styles for the ::after pseudoelement */
.btn:hover::after {
    transform: scale(1.5, 1.6); /* Scale X, Scale Y */
    opacity: 0;
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(200px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn-animated {
    animation: moveInBottom 2s ease-out .75s; /* Name, duration, type, delay */
    animation-fill-mode: backwards; /* Applies 0% before starting animation */
}